<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.pe.hayarobys.nox.common.comment.CommentDAO">
	<!-- 
	<resultMap type="kr.pe.hayarobys.nox.common.comment.CommentGroupVO" id="CommentGroupVO">
		<result column="CMT_GRP_SQ_PK" property="commentGroupNo" />	댓글 그룹 시퀀스 기본키
		<result column="CMT_GRP_NEW_WRT_FL" property="commentGroupNewWriteFlag" />	댓글 그룹 신규 작성 플래그
	</resultMap>
	-->
	
	<resultMap type="CommentDetailVO" id="CommentDetailVO">
		<result column="CMT_GRP_NEW_WRT_FL" property="commentGroupNewWriteFlag" />
		
		<result column="CMT_SQ_PK" property="commentNo" />
		<result column="CMT_CLS_FK" property="commentClassNo" />
		<result column="CMT_CLS_DPTH" property="commentClassDepth" />
		<result column="CMT_REG_DT" property="commentRegDate" />
		<result column="CMT_MOD_DT" property="commentModDate" />
		<result column="CMT_SCRT_FL" property="commentSecretFlag" />
		<result column="CMT_BODY" property="commentBody" />
		
		<result column="MEM_SQ_PK" property="memNo" />
		<result column="MEM_NICKNM" property="nickname" />
		
		<result column="FILE_GRP_SQ_PK" property="fileGroupNo" />
		<result column="AUTH_GRP_PK" property="authgroup" />
	</resultMap>
	
	<select id="selectCommentDetailListByCommentGroupNo" parameterType="java.lang.Integer" resultMap="CommentDetailVO">
		SELECT
			CG.CMT_GRP_NEW_WRT_FL,
			C.CMT_SQ_PK,
			C.CMT_CLS_FK,
			C.CMT_CLS_DPTH,
			C.CMT_REG_DT,
			C.CMT_MOD_DT,
			C.CMT_SCRT_FL,
			C.CMT_BODY,
			M.MEM_SQ_PK,
			M.MEM_NICKNM,
			FG.FILE_GRP_SQ_PK,
			AG.AUTH_GRP_PK
		FROM
			CMT_GRP_TB AS CG
			LEFT JOIN CMT_TB AS C ON (CG.CMT_GRP_SQ_PK = C.CMT_GRP_FK)
			LEFT JOIN MEM_TB AS M ON (C.MEM_FK = M.MEM_SQ_PK)
			LEFT JOIN FILE_GRP_TB AS FG ON (C.FILE_GRP_FK = FG.FILE_GRP_SQ_PK)
			LEFT JOIN AUTH_GRP_TB AS AG ON (C.AUTH_GRP_FK = AG.AUTH_GRP_PK)
		WHERE
			CG.CMT_GRP_SQ_PK = 1;
	</select>
	
	<insert id="insertComment" parameterType="CommentVO">
		INSERT INTO CMT_TB(
			CMT_GRP_FK,
			MEM_FK,
			AUTH_GRP_FK,
			CMT_SCRT_FL,
			CMT_BODY
		)VALUES(
			#{commentGroupNo},
			#{memNo},
			#{authgroup},
			#{commentSecretFlag},
			#{commentBody}
		)
	</insert>
	
	<insert id="insertCommentGroup" parameterType="CommentGroupVO">
		INSERT INTO CMT_GRP_TB(
			CMT_GRP_NEW_WRT_FL
		)VALUES(
			CMT_GRP_NEW_WRT_FL = #{commentGroupNewWriteFlag}
		)
		<selectKey resultType="java.lang.Integer" keyProperty="commentGroupNo" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>
	
	<!-- 특정 댓글 그룹의 각 댓글들이 참조하는 모든 파일 그룹 번호를 조회해 목록으로 반환합니다. -->
	<select id="selectFileGroupNoListFromCommentByCommentGroupNo" parameterType="java.lang.Integer" resultType="java.lang.Integer">
		SELECT
			FIG.FILE_GRP_SQ_PK
		FROM
			CMT_GRP_TB AS CR
			INNER JOIN CMT_TB AS C			ON(CR.CMT_GRP_SQ_PK = C.CMT_GRP_FK)
			INNER JOIN FILE_GRP_TB AS FIG	ON(C.FILE_GRP_FK = FIG.FILE_GRP_SQ_PK)
		WHERE
			CR.CMT_GRP_SQ_PK = #{commentGroupNo}
	</select>
	
	<!-- 특정 댓글 그룹의 신규 작성 가능 여부를 변경합니다. -->
	<update id="updateAllowCommentOfCommentGroupByCommentGroupNo">
		UPDATE CMT_GRP_TB
		SET CMT_GRP_NEW_WRT_FL = #{commentGroupNewWriteFlag}
		WHERE CMT_GRP_SQ_PK = #{commentGroupNo}
	</update>
	
	<!-- 특정 댓글 그룹에 속한 모든 댓글을 제거합니다. -->
	<delete id="deleteCommentByCommentGroupNo" parameterType="java.lang.Integer">
		DELETE FROM CMT_TB
		WHERE CMT_GRP_FK = #{commentGroupNo}
	</delete>
	
	<!-- 특정 댓글 그룹을 제거합니다. -->
	<delete id="deleteCommentGroupByCommentGroupNo" parameterType="java.lang.Integer">
		DELETE FROM CMT_GRP_TB
		WHERE CMT_GRP_SQ_PK = #{commentGroupNo}
	</delete>
</mapper>